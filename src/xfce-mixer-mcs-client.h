/* Generated by GOB (v2.0.14)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>
#ifndef __XFCE_MIXER_MCS_CLIENT_H__
#define __XFCE_MIXER_MCS_CLIENT_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */



#include <gtk/gtk.h>
#include <libxfce4mcs/mcs-client.h>


/*
 * Type checking and casting macros
 */
#define XFCE_TYPE_MIXER_MCS_CLIENT	(xfce_mixer_mcs_client_get_type())
#define XFCE_MIXER_MCS_CLIENT(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), xfce_mixer_mcs_client_get_type(), XfceMixerMcsClient)
#define XFCE_MIXER_MCS_CLIENT_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), xfce_mixer_mcs_client_get_type(), XfceMixerMcsClient const)
#define XFCE_MIXER_MCS_CLIENT_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), xfce_mixer_mcs_client_get_type(), XfceMixerMcsClientClass)
#define XFCE_IS_MIXER_MCS_CLIENT(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), xfce_mixer_mcs_client_get_type ())

#define XFCE_MIXER_MCS_CLIENT_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), xfce_mixer_mcs_client_get_type(), XfceMixerMcsClientClass)

/*
 * Main object structure
 */
#ifndef __TYPEDEF_XFCE_MIXER_MCS_CLIENT__
#define __TYPEDEF_XFCE_MIXER_MCS_CLIENT__
typedef struct _XfceMixerMcsClient XfceMixerMcsClient;
#endif
struct _XfceMixerMcsClient {
	GObject __parent__;
	/*< private >*/
	gchar * channel; /* protected */
	McsClient * client; /* protected */
	GHashTable * hash; /* protected */
};

/*
 * Class definition
 */
typedef struct _XfceMixerMcsClientClass XfceMixerMcsClientClass;
struct _XfceMixerMcsClientClass {
	GObjectClass __parent__;
	/*signal*/void (* changed) (XfceMixerMcsClient * self);
};


/*
 * Public methods
 */
GType	xfce_mixer_mcs_client_get_type	(void);
void 	xfce_mixer_mcs_client_changed	(XfceMixerMcsClient * self);
void 	xfce_mixer_mcs_client_update_setting	(XfceMixerMcsClient * self,
					gchar const * name,
					McsSetting * setting);
gchar * 	xfce_mixer_mcs_client_get_setting	(XfceMixerMcsClient * self,
					gchar const * name);
gchar * 	xfce_mixer_mcs_client_get_useful_controls	(XfceMixerMcsClient * self,
					gchar const * device);
XfceMixerMcsClient * 	xfce_mixer_mcs_client_new	(void);

/*
 * Signal connection wrapper macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define xfce_mixer_mcs_client_connect__changed(object,func,data)	g_signal_connect(XFCE_MIXER_MCS_CLIENT(__extension__ ({XfceMixerMcsClient *___object = (object); ___object; })),"changed",(GCallback) __extension__ ({void (* ___changed) (XfceMixerMcsClient * ___fake___self, gpointer ___data ) = (func); ___changed; }), (data))
#define xfce_mixer_mcs_client_connect_after__changed(object,func,data)	g_signal_connect_after(XFCE_MIXER_MCS_CLIENT(__extension__ ({XfceMixerMcsClient *___object = (object); ___object; })),"changed",(GCallback) __extension__ ({void (* ___changed) (XfceMixerMcsClient * ___fake___self, gpointer ___data ) = (func); ___changed; }), (data))
#define xfce_mixer_mcs_client_connect_data__changed(object,func,data,destroy_data,flags)	g_signal_connect_data(XFCE_MIXER_MCS_CLIENT(__extension__ ({XfceMixerMcsClient *___object = (object); ___object; })),"changed",(GCallback) __extension__ ({void (* ___changed) (XfceMixerMcsClient * ___fake___self, gpointer ___data ) = (func); ___changed; }), (data), (destroy_data), (GConnectFlags)(flags))
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define xfce_mixer_mcs_client_connect__changed(object,func,data)	g_signal_connect(XFCE_MIXER_MCS_CLIENT(object),"changed",(GCallback)(func),(data))
#define xfce_mixer_mcs_client_connect_after__changed(object,func,data)	g_signal_connect_after(XFCE_MIXER_MCS_CLIENT(object),"changed",(GCallback)(func),(data))
#define xfce_mixer_mcs_client_connect_data__changed(object,func,data,destroy_data,flags)	g_signal_connect_data(XFCE_MIXER_MCS_CLIENT(object),"changed",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#endif /* __GNUC__ && !__STRICT_ANSI__ */


/*
 * Argument wrapping macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define XFCE_MIXER_MCS_CLIENT_PROP_CHANNEL(arg)    	"channel", __extension__ ({gchar *z = (arg); z;})
#define XFCE_MIXER_MCS_CLIENT_GET_PROP_CHANNEL(arg)	"channel", __extension__ ({gchar **z = (arg); z;})
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define XFCE_MIXER_MCS_CLIENT_PROP_CHANNEL(arg)    	"channel",(gchar *)(arg)
#define XFCE_MIXER_MCS_CLIENT_GET_PROP_CHANNEL(arg)	"channel",(gchar **)(arg)
#endif /* __GNUC__ && !__STRICT_ANSI__ */


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif

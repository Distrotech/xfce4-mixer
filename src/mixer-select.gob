%{
#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif
%}

%a{
#include <gtk/gtk.h>
#include "xfce-mixer-control.h"
#include "xfce-mixer-cache-vc.h"
#include "vc.h"
%}
%{
%}

class Xfce:Mixer:Select from Xfce:Mixer:Control {
	protected GtkOptionMenu *om = NULL;
	protected GtkLabel *label = NULL;
	protected GList *choices = NULL
		destroy {
			vc_free_choices(VAR);
			VAR = NULL;
		};

	protected void changed_cb(self, gpointer om)
	{
		gint i;
		gchar const *s;
		volchoice_t const* choice;
		
		s = NULL;
		i = gtk_option_menu_get_history (self->om);
		if (i >= 0) {
			choice = (volchoice_t const*) g_list_nth_data (self->choices, i);
			if (choice) {
				s = choice->name;
			} else {
				s = NULL;
			}
		}

		if (s) {
			g_object_set (G_OBJECT (self), "value", s, NULL);
		}
	}

	override (Xfce:Mixer:Control) void
	value_changed (Xfce:Mixer:Control *pself (check null type))
	{
		gchar *s;
                Self *self;
		gint i;
		volchoice_t const       *choice;
		
                self = SELF (pself);

		s = XFCE_MIXER_CONTROL (self)->value;

		if (s)
		for(i = 0; i < g_list_length (self->choices); i++) {
			choice = (volchoice_t const*) g_list_nth_data (self->choices, i);
			if (g_str_equal (choice->name, s)) {
				if (gtk_option_menu_get_history (self->om) != i) {
					/* soften gtk 2.600.7 bug where set_history on an open menu will
					   replace the already selected item by a separator */
					gtk_option_menu_set_history (self->om, i);
				}
			}
		}
        }

	init(self)
	{
		self->label = GTK_LABEL (gtk_label_new (""));
		self->om = GTK_OPTION_MENU (gtk_option_menu_new ());
		gtk_widget_show (GTK_WIDGET (self->label));
		gtk_widget_show (GTK_WIDGET (self->om));
		gtk_box_pack_start (GTK_BOX (self), GTK_WIDGET (self->label), FALSE, FALSE, 0);
		gtk_box_pack_start (GTK_BOX (self), GTK_WIDGET (self->om), FALSE, FALSE, 0);
		g_signal_connect_swapped (G_OBJECT (self->om), "changed", G_CALLBACK (self_changed_cb), self);
	}

	public XfceMixerControl *new(void)
	{
		return XFCE_MIXER_CONTROL(GET_NEW);
	}
	
	protected void fill_option_menu(self)
	{
		GtkMenu			*menu;
		GtkWidget		*it;
		volchoice_t const	*choice;
		GList			*choices;
		
		menu = GTK_MENU (gtk_menu_new ());

g_warning ("fill option menu");
		
		choices = self->choices;
		
		while (choices) {
			choice = (volchoice_t const *) choices->data;
		  
			it = gtk_menu_item_new_with_label (choice->displayname);
			gtk_menu_shell_append (GTK_MENU_SHELL (menu), it);
			gtk_widget_show (it);
			
			choices = g_list_next (choices);
		}
	
		gtk_option_menu_set_menu (self->om, GTK_WIDGET (menu));
		/*g_object_unref (menu);*/ /* FIXME is that right? */
	}

	override (Xfce:Mixer:Control) void
	vcname_changed (Xfce:Mixer:Control *pself (check null type))
	{
		Self *self;
		char *sanename;
		gchar *tmp;

		self = SELF (pself);
		PARENT_HANDLER (pself);

		tmp = NULL;
		sanename = xfce_mixer_control_calc_sanename (pself);
		if (sanename)
			tmp = g_strdup_printf ("%s:", sanename);

		gtk_label_set_text (GTK_LABEL (self->label), tmp);
		if (tmp)
			g_free (tmp);

		if (sanename)
			g_free (sanename);

		if (self->choices) {
			vc_free_choices (self->choices);
			self->choices = NULL;
		}

		self->choices = xfce_mixer_cache_vc_get_choices (
			XFCE_MIXER_CONTROL(self)->vcname
		);
		self_fill_option_menu (self);
        }
}

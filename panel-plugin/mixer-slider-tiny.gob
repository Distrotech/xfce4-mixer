%{
#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif
%}
%a{
#include "xfce-mixer-control.h"
%}

%{
extern GtkTooltips *tooltips;
%}

class Xfce:Mixer:Slider:Tiny from Xfce:Mixer:Control {
	protected GtkProgressBar *progress = NULL;
	/*protected GtkBox *hbox = NULL;*/
	public GtkEventBox *eb = NULL;
	protected gboolean pressed = FALSE;

	protected void set_vval (self, gint vval)
	{
		gdouble val;
		gchar *tmp;

		val = vval;
		tmp = g_strdup_printf("%d", (gint) val);
		g_object_set (G_OBJECT (self), "value", tmp, NULL);
		g_free (tmp);

		gtk_progress_bar_set_fraction(GTK_PROGRESS_BAR(self->progress),
		  val / 100.0);
	}

	init (self)
	{
		GtkRcStyle *rc;
		GdkColor color;

		self->progress = GTK_PROGRESS_BAR (gtk_progress_bar_new ());
		gtk_progress_bar_set_orientation (self->progress, GTK_PROGRESS_BOTTOM_TO_TOP);

		rc = gtk_widget_get_modifier_style (GTK_WIDGET (self->progress));
		if (!rc)
			rc = gtk_rc_style_new ();

		gdk_color_parse ("#00c000", &color);

		if (rc) {
			rc->color_flags[GTK_STATE_PRELIGHT] |= GTK_RC_BG;
			rc->bg[GTK_STATE_PRELIGHT] = color;
		}

		gtk_widget_modify_style (GTK_WIDGET (self->progress), rc);

		gtk_widget_show (GTK_WIDGET (self->progress));

		self->eb = GTK_EVENT_BOX (gtk_event_box_new ());
		gtk_widget_show (GTK_WIDGET (self->eb));

		gtk_container_add (GTK_CONTAINER (self->eb), GTK_WIDGET (self->progress));

		gtk_box_pack_start (GTK_BOX (self), GTK_WIDGET (self->eb), TRUE, TRUE, 0);

		g_signal_connect_swapped (self->eb, "scroll-event", G_CALLBACK(self_scroll_cb), self);
		g_signal_connect_swapped (self->eb, "button-press-event", G_CALLBACK(self_button_cb), self);
		g_signal_connect_swapped (self->eb, "button-release-event", G_CALLBACK(self_button_cb), self);
		g_signal_connect_swapped (self->eb, "motion-notify-event", G_CALLBACK(self_motion_cb), self);
	}

	public gboolean scroll_cb (self, GdkEventScroll *event, GtkWidget *w)
	{
		int	vol;	/* new volume */
		vol = xfce_mixer_control_calc_num_value (XFCE_MIXER_CONTROL (self));
	
		if (event->type != GDK_SCROLL)
			return FALSE;
	
		if (event->direction == GDK_SCROLL_DOWN) {
			vol -= 7;
			if (vol < 0) { vol = 0; }
		} else if (event->direction == GDK_SCROLL_UP) {
			vol += 7;
			if (vol > 100) { vol = 100; }
		}

		self_set_vval (self, vol);
		return TRUE;

	}

	protected gboolean button_cb (self, GdkEventButton *b, GtkWidget *widget)
	{
		int        y;

		y = (int) b->y; /* pos */

		if (b->button == 3 || b->button == 2) {
			if (b->type == GDK_BUTTON_PRESS) {
				/* mute */
				y = 0;
			} else {
				return TRUE;
			}
		} else if (b->button == 1) {
			if (b->type == GDK_BUTTON_PRESS) {
				y = self_figure_out_volume(self, widget, y);
				self->pressed = TRUE;
			} else if (b->type == GDK_BUTTON_RELEASE){
				y = self_figure_out_volume(self, widget, y);
				self->pressed = FALSE;
			} else {
				return TRUE;
			}
		} else {
			return FALSE;
		}
		self_set_vval (self, y);
		return TRUE;
	}

	/* returns the volume in range 0..100, given a coordinate in the widget. */
        protected int figure_out_volume(self, GtkWidget *widget, int y) {
		int	sy; /* size in pixels. */

		sy = widget->allocation.height; /* size */
		if (sy > 4) {
			sy -= 4;
			/* this is a hack 'cause I dont know how to get the height of the border of the progressbar yet ;) */
			y = (sy + 2 - y) * 100 / sy;
			if (y <= 0)
				y = 0;
		} else {
			y = 0;
		}

		if (y < 0) {
			y = 0;
		} else if (y > 100) {
			y = 100;
		}
		return y;
        }

	protected gboolean motion_cb (self, GdkEventMotion *m, GtkWidget *widget)
	{
		if (self->pressed) {
			int y = (int) m->y; /* pos */
			y = self_figure_out_volume(self, widget, y);
			self_set_vval (self, y);
			return TRUE;
		}
		return FALSE;
	}

	public XfceMixerControl *new(void)
	{
		return XFCE_MIXER_CONTROL(GET_NEW);
	}

	override (Xfce:Mixer:Control) void
	value_changed (Xfce:Mixer:Control *pself (check null type))
	{
		gint v;

		Self *self;

		self = SELF (pself);

		v = xfce_mixer_control_calc_num_value (pself);

		gtk_progress_bar_set_fraction (GTK_PROGRESS_BAR (self->progress), ((gdouble) v) / 100.0);
	}

	override (Xfce:Mixer:Control) void
        vcname_changed (Xfce:Mixer:Control *pself (check null type))
        {
		Self *self;
		char *sanename;
		PARENT_HANDLER (pself);

		self = SELF (pself);
		sanename = xfce_mixer_control_calc_sanename (pself);
/*		gtk_label_set_text (GTK_LABEL (self->label), sanename);*/
		if (sanename && self->progress) {
			gtk_tooltips_set_tip (tooltips, GTK_WIDGET (self->progress), sanename, NULL);
		}
		g_free (sanename);
	}

}
